# archivo: mini_test.py

import streamlit as st
from collections import defaultdict

st.title("Cuestionario: ¬øQu√© empresa del Grupo Calaf va m√°s contigo?")

st.write("Responde las siguientes preguntas:")


# Diccionario para puntajes
puntajes = defaultdict(int)

# Mapas de relaci√≥n entre respuestas y empresas
relaciones = {
    1: [
        ("Obra civil o edificaci√≥n tradicional", ["Calaf Constructora", "Calaf Trenching"]),
        ("Taller mec√°nico o planta de fabricaci√≥n", ["Calaf Industrial", "Nextrencher"]),
        ("Oficinas tecnol√≥gicas e innovaci√≥n", ["PICVISA Machine Vision Systems", "CICSA", "CIC3"]),
        ("Espacios naturales o medioambientales", ["DAGA", "Transparenta", "Ambitek"])
    ],
    2: [
        ("Me gusta ver c√≥mo las cosas toman forma desde cero", ["Calaf Constructora", "Calaf Trenching"]),
        ("Disfruto buscando soluciones t√©cnicas a problemas complejos", ["Calaf Industrial", "Nextrencher"]),
        ("Me apasiona la sostenibilidad y el futuro verde", ["DAGA", "Transparenta", "Ambitek"]),
        ("Me interesa la rob√≥tica, la visi√≥n artificial o el software", ["PICVISA Machine Vision Systems", "CICSA", "CIC3"])
    ],
    3: [
        ("La construcci√≥n de un puente o carretera", ["Calaf Constructora"]),
        ("El dise√±o de maquinaria industrial", ["Calaf Industrial", "Nextrencher"]),
        ("Un sistema de tratamiento de agua", ["DAGA", "Transparenta"]),
        ("Un sistema de separaci√≥n autom√°tica de residuos con IA", ["PICVISA Machine Vision Systems", "CIC3"])
    ],
    4: [
        ("Estructura", ["Calaf Constructora"]),
        ("Ingenier√≠a", ["Calaf Industrial"]),
        ("Innovaci√≥n", ["PICVISA Machine Vision Systems", "CICSA"]),
        ("Medio ambiente", ["DAGA", "Ambitek"])
    ],
    5: [
        ("Ver resultados f√≠sicos de tu esfuerzo", ["Calaf Constructora"]),
        ("Resolver problemas t√©cnicos complejos", ["Calaf Industrial"]),
        ("Participar en el desarrollo de nuevas tecnolog√≠as", ["PICVISA Machine Vision Systems", "CICSA"]),
        ("Mejorar el impacto ambiental", ["DAGA", "Transparenta"])
    ],
    6: [
        ("Administraciones p√∫blicas y constructoras", ["Calaf Constructora", "Calaf Trenching"]),
        ("Empresas industriales", ["Calaf Industrial", "Nextrencher"]),
        ("Ayuntamientos o empresas de aguas", ["DAGA", "Ambitek"]),
        ("Centros de reciclaje o laboratorios", ["PICVISA Machine Vision Systems", "CIC3"])
    ],
    7: [
        ("Coordinar una obra", ["Calaf Constructora"]),
        ("Dise√±ar piezas en CAD", ["Calaf Industrial", "Nextrencher"]),
        ("Programar sistemas autom√°ticos", ["CICSA", "PICVISA Machine Vision Systems"]),
        ("Supervisar una planta de tratamiento", ["DAGA", "Transparenta"])
    ],
    8: [
        ("Construcci√≥n sostenible", ["Calaf Constructora", "Ambitek"]),
        ("Tecnolog√≠a industrial", ["Calaf Industrial", "Nextrencher"]),
        ("Gesti√≥n de agua", ["DAGA", "Transparenta"]),
        ("Inteligencia artificial aplicada al reciclaje", ["PICVISA Machine Vision Systems", "CIC3"])
    ],
    9: [
        ("Jefe/a de obra", ["Calaf Constructora"]),
        ("T√©cnico/a de dise√±o y fabricaci√≥n", ["Calaf Industrial"]),
        ("Ingeniero/a de automatizaci√≥n", ["CICSA", "CIC3"]),
        ("Especialista en medioambiente o I+D", ["Ambitek", "DAGA"])
    ],
    10: [
        ("Ingenier√≠a civil o arquitectura t√©cnica", ["Calaf Constructora", "Calaf Trenching"]),
        ("Ingenier√≠a mec√°nica o el√©ctrica", ["Calaf Industrial", "Nextrencher"]),
        ("Ingenier√≠a ambiental o qu√≠mica", ["DAGA", "Transparenta"]),
        ("Rob√≥tica, IA o visi√≥n artificial", ["PICVISA Machine Vision Systems", "CIC3"])
    ]
}

# Funci√≥n para registrar la respuesta
def registrar_respuesta(numero_pregunta, respuesta):
    for texto, empresas in relaciones[numero_pregunta]:
        if respuesta == texto:
            for empresa in empresas:
                puntajes[empresa] += 1

# Pregunta 1
pregunta1 = st.radio(
    "¬øQu√© tipo de entorno laboral te atrae m√°s?",
    ["Obra civil o edificaci√≥n tradicional", 
     "Taller mec√°nico o planta de fabricaci√≥n", 
     "Oficinas tecnol√≥gicas e innovaci√≥n",
     "Espacios naturales o medioambientales"],index=None
)
registrar_respuesta(1, pregunta1)

# Pregunta 2
pregunta2 = st.radio(
    "¬øCon qu√© frase te identificas m√°s?",
    ["Me gusta ver c√≥mo las cosas toman forma desde cero", 
     "Disfruto buscando soluciones t√©cnicas a problemas complejos", 
     "Me apasiona la sostenibilidad y el futuro verde",
     "Me interesa la rob√≥tica, la visi√≥n artificial o el software"],index=None
)
registrar_respuesta(2, pregunta2)


# Pregunta 3
pregunta3 = st.radio(
    "¬øQu√© tipo de proyecto te ilusiona m√°s liderar?",
    ["La construcci√≥n de un puente o carretera", 
     "El dise√±o de maquinaria industrial", 
     "Un sistema de tratamiento de agua",
     "Un sistema de separaci√≥n autom√°tica de residuos con IA"],index=None
)
registrar_respuesta(3, pregunta3)

pregunta4 = st.radio(
    "¬øCu√°l de estas palabras te representa mejor?",
    ["Estructura","Ingenier√≠a","Innovaci√≥n","Medio ambiente"],index=None
)
registrar_respuesta(4, pregunta4)


pregunta5 = st.radio(
    "¬øQu√© te motiva m√°s de un trabajo?",
    ["Ver resultados f√≠sicos de tu esfuerzo",
     "Resolver problemas t√©cnicos complejos",
     "Participar en el desarrollo de nuevas tecnolog√≠as",
     "Mejorar el impacto ambiental"],index=None
)
registrar_respuesta(5, pregunta5)


pregunta6 = st.radio(
    "¬øCon qu√© tipo de clientes te gustar√≠a trabajar?",
    ["Administraciones p√∫blicas y constructoras",
     "Empresas industriales", 
     "Ayuntamientos o empresas de aguas",
     "Centros de reciclaje o laboratorios"],index=None
)
registrar_respuesta(6, pregunta6)


pregunta7 = st.radio(
    "¬øQu√© preferir√≠as hacer un d√≠a normal de trabajo?",
    ["Coordinar una obra",
     "Dise√±ar piezas en CAD", 
     "Programar sistemas autom√°ticos",
     "Supervisar una planta de tratamiento"],index=None
)
registrar_respuesta(7, pregunta7)


pregunta8 = st.radio(
    "¬øQu√© te parece m√°s atractivo?",
    ["Construcci√≥n sostenible", 
     "Tecnolog√≠a industrial",
     "Gesti√≥n de agua",
     "Inteligencia artificial aplicada al reciclaje"],index=None
)
registrar_respuesta(8, pregunta8)


pregunta9 = st.radio(
    "¬øCu√°l ser√≠a tu papel ideal?",
    ["Jefe/a de obra",
     "T√©cnico/a de dise√±o y fabricaci√≥n",
     "Ingeniero/a de automatizaci√≥n",
     "Especialista en medioambiente o I+D"],index=None
)
registrar_respuesta(9, pregunta9)


pregunta10 = st.radio(
    "¬øQu√© tipo de formaci√≥n o intereses tienes?",
    ["Ingenier√≠a civil o arquitectura t√©cnica",
     "Ingenier√≠a mec√°nica o el√©ctrica",
     "Ingenier√≠a ambiental o qu√≠mica",
     "Rob√≥tica, IA o visi√≥n artificial"],index=None
)
registrar_respuesta(10, pregunta10)


# Bot√≥n para enviar
if st.button("Enviar respuestas"):
    st.subheader("Resultado:")
    max_puntaje = max(puntajes.values())
    empresas_afines = [empresa for empresa, puntos in puntajes.items() if puntos == max_puntaje]

    for empresa in sorted(puntajes, key=puntajes.get, reverse=True):
        st.write(f"{empresa}: {puntajes[empresa]} puntos")

    st.markdown("### üèÜ Empresa(s) m√°s af√≠n(es):")
    for empresa in empresas_afines:
        st.success(empresa)

    if max_puntaje == 10:
        st.balloons()
